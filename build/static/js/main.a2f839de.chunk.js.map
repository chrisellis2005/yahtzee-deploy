{"version":3,"sources":["redux/actions/actions.ts","redux/actions/actionTypes.ts","components/Die.tsx","components/DiceContainer.tsx","components/RollDiceButton.tsx","scoreboard/Scoring.ts","components/ScoreItem.tsx","components/BonusItem.tsx","components/BonusYahtzeeItem.tsx","components/ScoreboardContainer.tsx","components/PlayScoreButton.tsx","components/Totals.tsx","App.tsx","serviceWorker.ts","redux/reducers/diceRoll.ts","redux/reducers/scoreboard.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["selectScore","score","type","payload","connect","state","ownProps","diceRoll","position","die","dice","locked","value","toggleDice","index","props","style","backgroundColor","border","width","height","display","alignItems","justifyContent","margin","cursor","boxShadow","MozBoxShadow","WebkitBoxShadow","onClick","DiceContainer","className","rollsRemaining","rollDice","disabled","getMatchingValue","requiredCount","matches","side","countDice","push","hasMatchingDice","filter","length","sumDice","sum","forEach","threeOfAKinds","pairs","pair","sorted","item","pos","indexOf","sort","ScoreItem","onSelected","scoreType","shared","padding","isSelected","getStyling","label","getValue","bonus","scoreboard","bonusYahtzees","bonusYahtzeeCount","ones","twos","threes","fours","fives","sixes","threeOfAKind","fourOfAKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","selectedScore","currentRoll","map","handleSelectScore","Scoring","buildScoreElements","elements","element","key","resetDice","playScore","enabled","undefined","marginLeft","console","log","lowerTotal","upperTotal","total","App","RollDiceButton","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","rollD6","Math","floor","random","combineReducers","action","newDice","newState","totalLower","upperScore","totalUpper","calculateTotals","checkUpperBonus","checkBonusYahtzee","calculateOnes","newScoreboard","calculateTwos","calculateThrees","calculateFours","calculateFives","calculateSixes","calculateThreeOfAKind","calculateFourOfAKind","calculateFullHouse","calculateSmallStraight","calculateLargeStraight","calculateYahtzee","calculateChance","createStore","rootReducer","rootElement","document","getElementById","ReactDOM","render","store","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a2f839de.chunk.js","sourcesContent":["import { \r\n    ROLL_DICE, \r\n    TOGGLE_DICE, \r\n    RESET_DICE, \r\n    SELECT_SCORE,\r\n    PLAY_SCORE\r\n} from \"./actionTypes\";\r\nimport DicePositions from \"../../dice/DicePositions\";\r\nimport DiceValues from \"../../dice/DiceValues\";\r\nimport { ScoreTypes } from \"../../scoreboard/ScoreTypes\";\r\n\r\nexport const rollDice = () => ({\r\n    type: ROLL_DICE,\r\n    payload: null\r\n});\r\n\r\nexport const toggleDice = (index: DicePositions) => ({\r\n    type: TOGGLE_DICE,\r\n    payload: {\r\n        index\r\n    }\r\n});\r\n\r\nexport const resetDice = () => ({\r\n    type: RESET_DICE,\r\n    payload: null\r\n});\r\n\r\n\r\n\r\n\r\nexport const playScore = (scoreType: ScoreTypes, dice: Array<DiceValues>) => ({\r\n    type: PLAY_SCORE,\r\n    payload: {\r\n        scoreType,\r\n        dice\r\n    }\r\n});\r\n\r\nexport const selectScore = (score: ScoreTypes | null) => ({ type: SELECT_SCORE, payload: {score}});","export const ROLL_DICE = \"ROLL_DICE\";\r\nexport const TOGGLE_DICE = \"TOGGLE_DICE\";\r\nexport const RESET_DICE = \"RESET_DICE\";\r\n\r\nexport const SCORE_ONES = \"SCORE_ONES\";\r\nexport const SCORE_TWOS = \"SCORE_TWOS\";\r\nexport const SCORE_THREES = \"SCORE_THREES\";\r\nexport const SCORE_FOURS = \"SCORE_FOURS\";\r\nexport const SCORE_FIVES = \"SCORE_FIVES\";\r\nexport const SCORE_SIXES = \"SCORE_SIXES\";\r\n\r\nexport const SCORE_THREE_OF_A_KIND = \"SCORE_THREE_OF_A_KIND\";\r\nexport const SCORE_FOUR_OF_A_KIND = \"SCORE_FOUR_OF_A_KIND\";\r\nexport const SCORE_FULL_HOUSE = \"SCORE_FULL_HOUSE\";\r\nexport const SCORE_SMALL_STRAIGHT = \"SCORE_SMALL_STRAIGHT\";\r\nexport const SCORE_LARGE_STRAIGHT = \"SCORE_LARGE_STRAIGHT\";\r\nexport const SCORE_YAHTZEE = \"SCORE_YAHTZEE\";\r\nexport const SCORE_CHANCE = \"SCORE_CHANCE\";\r\n\r\nexport const PLAY_SCORE = \"PLAY_SCORE\";\r\nexport const SELECT_SCORE = \"SELECT_SCORE\";","import React, { CSSProperties } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { IDiceState } from \"../redux/reducers/diceRoll\";\r\nimport DiceValues from \"../dice/DiceValues\";\r\nimport { toggleDice } from \"../redux/actions/actions\";\r\nimport DicePositions from \"../dice/DicePositions\";\r\n\r\ninterface IDie {\r\n    value?: DiceValues;\r\n    locked: boolean;\r\n}\r\ninterface IProps {\r\n    position: DicePositions;\r\n    die?: IDie;\r\n    toggleDice?: (index: DicePositions) => void;\r\n}\r\n\r\nconst Die: React.FC<IProps> = (props: IProps) => {\r\n    const die = props.die || { locked: false,value: null};\r\n    \r\n    const handleClick = () => {\r\n        if (props.toggleDice)\r\n            props.toggleDice(props.position);\r\n    }\r\n\r\n    const style: CSSProperties = { \r\n        backgroundColor: \"white\", \r\n        border: `1px solid black`, \r\n        width: \"50px\", \r\n        height: \"50px\", \r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        margin: \"10px\",\r\n        cursor: \"pointer\"\r\n    };\r\n\r\n    if (die.locked) {\r\n        style.boxShadow = \"0px 0px 10px 5px rgba(0,170,0,1)\";\r\n        style.MozBoxShadow = \"0px 0px 10px 5px rgba(0,170,0,1)\";\r\n        style.WebkitBoxShadow = \"0px 0px 10px 5px rgba(0,170,0,1)\";\r\n    }\r\n\r\n    return (<div style={style}\r\n        onClick={handleClick}>\r\n        <div>\r\n            {die.value}\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nconst mapStateToProps = (state: {diceRoll: IDiceState}, ownProps: { position: DicePositions}): IProps => {\r\n    const {diceRoll} = state;\r\n    const position = ownProps.position;\r\n    const die = diceRoll.dice[ownProps.position - 1];\r\n    const locked = die.locked;\r\n    const value = die.value\r\n    return { die: {locked, value} , position };\r\n}\r\n\r\nexport default connect(mapStateToProps, {toggleDice})(Die);","import React from \"react\";\r\nimport Die from \"./Die\";\r\n\r\nconst DiceContainer: React.FC = () => {\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <Die position={1}/>\r\n            <Die position={2}/>\r\n            <Die position={3}/>\r\n            <Die position={4}/>\r\n            <Die position={5}/>\r\n        </div>        \r\n    );\r\n\r\n};\r\n\r\nexport default DiceContainer;\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { rollDice } from \"../redux/actions/actions\";\r\nimport { IDiceState } from \"../redux/reducers/diceRoll\";\r\n\r\ninterface IProps {\r\n    rollsRemaining?: number;\r\n    rollDice?: () => void;\r\n}\r\n\r\nconst DiceRollButton: React.FC<IProps> = (props: IProps) => {\r\n    const handleClick = () => {\r\n        if (props.rollsRemaining === 0) return;\r\n\r\n        if (props.rollDice) {\r\n            props.rollDice();\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <button \r\n            type=\"button\" \r\n            className=\"btn btn-primary\" \r\n            disabled={props.rollsRemaining === 0}\r\n            onClick={handleClick}\r\n        >\r\n            Roll ({props.rollsRemaining})\r\n        </button>\r\n    );\r\n} \r\n\r\nconst mapStateToProps = (state: {diceRoll: IDiceState}) => {\r\n    const {diceRoll} = state;\r\n    const rollsRemaining = diceRoll.rollsRemaining\r\n    return { rollsRemaining };\r\n}\r\n\r\nexport default connect(mapStateToProps, {rollDice})(DiceRollButton);","import DiceValues from \"../dice/DiceValues\";\r\n\r\nconst ones = (dice: Array<DiceValues>): number => {\r\n    let score = 0;\r\n    dice.forEach((die) => {\r\n        if (die === 1) {\r\n            score += 1;\r\n        }\r\n    });\r\n    return score;\r\n}\r\n\r\nconst twos = (dice: Array<DiceValues>): number => {\r\n    let score = 0;\r\n    dice.forEach((die) => {\r\n        if (die === 2) {\r\n            score += 2;\r\n        }\r\n    });\r\n    return score;\r\n}\r\n\r\nconst threes = (dice: Array<DiceValues>): number => {\r\n    let score = 0;\r\n    dice.forEach((die) => {\r\n        if (die === 3) {\r\n            score += 3;\r\n        }\r\n    });\r\n    return score;\r\n}\r\n\r\nconst fours = (dice: Array<DiceValues>): number => {\r\n    let score = 0;\r\n    dice.forEach((die) => {\r\n        if (die === 4) {\r\n            score += 4;\r\n        }\r\n    });\r\n    return score;\r\n}\r\n\r\nconst fives = (dice: Array<DiceValues>): number => {\r\n    let score = 0;\r\n    dice.forEach((die) => {\r\n        if (die === 5) {\r\n            score += 5;\r\n        }\r\n    });\r\n    return score;\r\n}\r\n\r\nconst sixes = (dice: Array<DiceValues>): number => {\r\n    let score = 0;\r\n    dice.forEach((die) => {\r\n        if (die === 6) {\r\n            score += 6;\r\n        }\r\n    });\r\n    return score;\r\n}\r\n\r\nconst threeOfAKind = (dice: Array<DiceValues>): number => {\r\n\r\n    if (hasMatchingDice(dice, 3)){\r\n        return sumDice(dice);\r\n    } \r\n    return 0;\r\n}\r\n\r\nconst fourOfAKind = (dice: Array<DiceValues>): number => {\r\n\r\n    if (hasMatchingDice(dice, 4)){\r\n        return sumDice(dice);\r\n    } \r\n    return 0;\r\n}\r\n\r\nconst fullHouse = (dice: Array<DiceValues>): number => {\r\n    const threeOfAKinds = getMatchingValue(dice, 3);\r\n    const pairs = getMatchingValue(dice, 2);\r\n\r\n    if (threeOfAKinds.length === 0) {\r\n        return 0;\r\n    }\r\n\r\n    const differentPairs = pairs.filter(pair => pair !== threeOfAKinds[0]);\r\n\r\n    if (differentPairs.length === 1) {\r\n        return 25;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nconst smallStraight = (dice: Array<DiceValues>): number => {\r\n    const score = 30;\r\n    \r\n    const sorted = dice\r\n        .filter(function(item, pos) {\r\n            return dice.indexOf(item) === pos;\r\n        })\r\n        .sort();\r\n\r\n    if (sorted[0] === 1 &&\r\n        sorted[1] === 2 &&\r\n        sorted[2] === 3 && \r\n        sorted[3] === 4) {\r\n        return score;\r\n    }\r\n\r\n    if (sorted[0] === 2 &&\r\n        sorted[1] === 3 &&\r\n        sorted[2] === 4 && \r\n        sorted[3] === 5) {\r\n        return score;\r\n    }\r\n\r\n    if (sorted[0] === 3 &&\r\n        sorted[1] === 4 &&\r\n        sorted[2] === 5 && \r\n        sorted[3] === 6) {\r\n        return score;\r\n    }\r\n\r\n    if (sorted[1] === 1 &&\r\n        sorted[2] === 2 &&\r\n        sorted[3] === 3 && \r\n        sorted[4] === 4) {\r\n        return score;\r\n    }\r\n\r\n    if (sorted[1] === 2 &&\r\n        sorted[2] === 3 &&\r\n        sorted[3] === 4 && \r\n        sorted[4] === 5) {\r\n        return score;\r\n    }\r\n\r\n    if (sorted[1] === 3 &&\r\n        sorted[2] === 4 &&\r\n        sorted[3] === 5 && \r\n        sorted[4] === 6) {\r\n        return score;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nconst largeStraight = (dice: Array<DiceValues>): number => {\r\n    const score = 40;\r\n    const sorted = dice.sort();\r\n\r\n    if (sorted[0] === 1 &&\r\n        sorted[1] === 2 &&\r\n        sorted[2] === 3 && \r\n        sorted[3] === 4 &&\r\n        sorted[4] === 5) {\r\n        return score;\r\n    }\r\n\r\n    if (sorted[0] === 2 &&\r\n        sorted[1] === 3 && \r\n        sorted[2] === 4 &&\r\n        sorted[3] === 5 &&\r\n        sorted[4] === 6) {\r\n        return score;\r\n    }\r\n\r\n    return 0;\r\n}   \r\n\r\nconst yahtzee = (dice: Array<DiceValues>): number => {\r\n    if (hasMatchingDice(dice, 5)){\r\n        return 50;\r\n    } \r\n    return 0;\r\n}\r\n\r\nconst chance = (dice: Array<DiceValues>): number => {\r\n    return sumDice(dice);\r\n}\r\n\r\nconst getMatchingValue = (dice: Array<DiceValues>, requiredCount: number): Array<DiceValues> => {\r\n    const matches: Array<DiceValues> = [];\r\n\r\n    for (let side = 1; side <= 6; side++) {\r\n        if (countDice(dice, side as DiceValues) === requiredCount)\r\n            matches.push(side as DiceValues);    \r\n    }\r\n\r\n    return matches;\r\n}\r\n\r\nconst hasMatchingDice = (dice: Array<DiceValues>, requiredCount: number): boolean => {\r\n    const matching = \r\n        (countDice(dice, 1) >= requiredCount ||\r\n        countDice(dice, 2) >= requiredCount ||\r\n        countDice(dice, 3) >= requiredCount ||\r\n        countDice(dice, 4) >= requiredCount ||\r\n        countDice(dice, 5) >= requiredCount ||\r\n        countDice(dice, 6) >= requiredCount);\r\n        \r\n    return matching;\r\n}\r\n\r\nconst countDice = (dice: Array<DiceValues>, side: DiceValues): number => {\r\n    let matching = dice.filter(die => die === side);\r\n    return matching.length;\r\n}\r\n\r\nconst sumDice = (dice: Array<DiceValues>): number => {\r\n    let sum = 0;\r\n    dice.forEach(die => {\r\n        sum += die as number;\r\n    });\r\n    return sum;\r\n}\r\n\r\nexport default {\r\n    ones,\r\n    twos,\r\n    threes,\r\n    fours,\r\n    fives,\r\n    sixes,\r\n    threeOfAKind,\r\n    fourOfAKind, \r\n    fullHouse,\r\n    smallStraight,\r\n    largeStraight,\r\n    yahtzee,\r\n    chance\r\n}","import React, { CSSProperties } from \"react\";\r\nimport { ScoreTypes } from \"../scoreboard/ScoreTypes\";\r\n\r\ninterface IProps {\r\n    scoreType: ScoreTypes;\r\n    label: string;\r\n    getValue: (scoreType: ScoreTypes) => number | null;\r\n    isSelected: (scoreType: ScoreTypes) => boolean;\r\n    onSelected: (scoreType: ScoreTypes) => void;\r\n}\r\n\r\nconst ScoreItem: React.FC<IProps> = (props: IProps) => {\r\n    const getStyling = (): CSSProperties => {\r\n        const shared: CSSProperties = {\r\n            margin: \"10px\",\r\n            padding: \"5px\",\r\n            cursor: \"pointer\"\r\n        };\r\n        if (props.isSelected(props.scoreType)) {\r\n            // Selected Styling\r\n            return {\r\n                ...shared,\r\n                boxShadow: \"0px 0px 10px 5px rgba(0,170,0,1)\",\r\n                MozBoxShadow: \"0px 0px 10px 5px rgba(0,170,0,1)\",\r\n                WebkitBoxShadow: \"0px 0px 10px 5px rgba(0,170,0,1)\"\r\n            };\r\n        } else {\r\n            return {\r\n                ...shared\r\n            };\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div onClick={() => props.onSelected(props.scoreType)} style={getStyling()}>\r\n            {props.label}: {props.getValue(props.scoreType)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScoreItem;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { IScoreboardState } from \"../redux/reducers/scoreboard\";\r\n\r\ninterface IProps {\r\n    bonus: number | null;\r\n}\r\n\r\nconst BonusItem: React.FC<IProps> = (props: IProps) => {\r\n    return (\r\n        <div style={{margin: \"10px\", padding: \"5px\"}}>\r\n            Bonus: { props.bonus || 0 }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps  = (state: {scoreboard: IScoreboardState}): IProps => {\r\n    const {scoreboard} = state;\r\n    const bonus = scoreboard.bonus;\r\n    return { bonus };\r\n}\r\n\r\nexport default connect(mapStateToProps)(BonusItem);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { IScoreboardState } from \"../redux/reducers/scoreboard\";\r\n\r\ninterface IProps {\r\n    bonusYahtzeeCount: number;\r\n}\r\n\r\nconst BonusYahtzeeItem: React.FC<IProps> = (props: IProps) => {\r\n    return (\r\n        <div style={{margin: \"10px\", padding: \"5px\",}}>\r\n            Bonus Yahtzee X: { props.bonusYahtzeeCount }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps  = (state: {scoreboard: IScoreboardState}): IProps => {\r\n    const {scoreboard} = state;\r\n    const bonus = scoreboard.bonusYahtzees;\r\n\r\n    return { bonusYahtzeeCount: bonus === null ? 0 : bonus.length };\r\n}\r\n\r\nexport default connect(mapStateToProps)(BonusYahtzeeItem);","import React from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport { IScoreboardState } from \"../redux/reducers/scoreboard\";\r\nimport { selectScore } from \"../redux/actions/actions\";\r\nimport { IDiceState } from \"../redux/reducers/diceRoll\";\r\nimport DiceValues from \"../dice/DiceValues\";\r\nimport Scoring from \"../scoreboard/Scoring\";\r\nimport { ScoreTypes } from \"../scoreboard/ScoreTypes\";\r\nimport ScoreItem from \"./ScoreItem\";\r\nimport BonusItem from \"./BonusItem\";\r\nimport BonusYahtzeeItem from \"./BonusYahtzeeItem\";\r\n\r\ninterface IProps {\r\n    [index: string]:any | null;\r\n\r\n    ones: number | null;\r\n    twos: number | null;\r\n    threes: number | null;\r\n    fours: number | null;\r\n    fives: number | null;\r\n    sixes: number | null;\r\n\r\n    threeOfAKind: number | null;\r\n    fourOfAKind: number | null;\r\n    fullHouse: number | null;\r\n    smallStraight: number | null;\r\n    largeStraight: number | null;\r\n    yahtzee: number | null;\r\n    chance: number | null;\r\n\r\n    selectedScore?: ScoreTypes | null;\r\n    currentRoll?: Array<DiceValues|null|undefined>;\r\n\r\n    selectScore?: (score: ScoreTypes) => void;\r\n    \r\n}\r\n\r\ninterface ScoreElement {\r\n    scoreType: ScoreTypes;\r\n    label: string;\r\n}\r\n\r\nconst ScoreboardContainer: React.FC<IProps> = (props: IProps) => {\r\n\r\n    const handleSelectScore = (score: ScoreTypes) => {\r\n        const value: any = props[score];\r\n        if (value !== null) return;\r\n\r\n        if (props.selectScore) {\r\n            props.selectScore(score);\r\n        }\r\n    }\r\n\r\n    const getValue = (score: ScoreTypes) => {\r\n        if (props.selectedScore === score && props.currentRoll && props.currentRoll[0]) {\r\n            switch (score) {\r\n                case \"ones\": \r\n                    return Scoring.ones(props.currentRoll as Array<DiceValues>);\r\n                case \"twos\": \r\n                    return Scoring.twos(props.currentRoll as Array<DiceValues>);\r\n                case \"threes\": \r\n                    return Scoring.threes(props.currentRoll as Array<DiceValues>);\r\n                case \"fours\": \r\n                    return Scoring.fours(props.currentRoll as Array<DiceValues>);\r\n                case \"fives\": \r\n                    return Scoring.fives(props.currentRoll as Array<DiceValues>);\r\n                case \"sixes\": \r\n                    return Scoring.sixes(props.currentRoll as Array<DiceValues>);\r\n                case \"threeOfAKind\":\r\n                    return Scoring.threeOfAKind(props.currentRoll as Array<DiceValues>);\r\n                case \"fourOfAKind\":\r\n                    return Scoring.fourOfAKind(props.currentRoll as Array<DiceValues>);\r\n                case \"fullHouse\":\r\n                    return Scoring.fullHouse(props.currentRoll as Array<DiceValues>);\r\n                case \"smallStraight\":\r\n                    return Scoring.smallStraight(props.currentRoll as Array<DiceValues>);\r\n                case \"largeStraight\":\r\n                    return Scoring.largeStraight(props.currentRoll as Array<DiceValues>);\r\n                case \"yahtzee\":\r\n                    return Scoring.yahtzee(props.currentRoll as Array<DiceValues>);\r\n                case \"chance\":\r\n                    return Scoring.chance(props.currentRoll as Array<DiceValues>);\r\n            }\r\n        }\r\n\r\n        const value: any = props[score];\r\n        return value;\r\n    };\r\n\r\n    const isSelected = (scoreType: ScoreTypes) => props.selectedScore === scoreType;\r\n\r\n    const upperElements: Array<ScoreElement> = [\r\n        {scoreType: \"ones\", label: \"Ones\"},\r\n        {scoreType: \"twos\", label: \"Twos\"},\r\n        {scoreType: \"threes\", label: \"Threes\"},\r\n        {scoreType: \"fours\", label: \"Fours\"},\r\n        {scoreType: \"fives\", label: \"Fives\"},\r\n        {scoreType: \"sixes\", label: \"Sixes\"}\r\n    ];\r\n\r\n    const lowerElements: Array<ScoreElement> = [\r\n        {scoreType: \"threeOfAKind\", label: \"Three of a Kind\"},\r\n        {scoreType: \"fourOfAKind\", label: \"Four of a Kind\"},\r\n        {scoreType: \"fullHouse\", label: \"Full House\"},\r\n        {scoreType: \"smallStraight\", label: \"Small Straight\"},\r\n        {scoreType: \"largeStraight\", label: \"Large Straight\"},\r\n        {scoreType: \"yahtzee\", label: \"Yahtzee\"},\r\n        {scoreType: \"chance\", label: \"Chance\"}\r\n    ];\r\n\r\n    const buildScoreElements = (elements: Array<ScoreElement>) => {\r\n        return elements.map((element, index) => (<ScoreItem \r\n            key={index}\r\n            scoreType={element.scoreType} \r\n            label={element.label} \r\n            isSelected={isSelected}\r\n            getValue={getValue}\r\n            onSelected={handleSelectScore}\r\n        />));\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div style={{width: \"50%\"}}>\r\n                \r\n                { buildScoreElements(upperElements) }\r\n                <BonusItem />\r\n\r\n            </div>\r\n            <div style={{width: \"50%\"}}>\r\n\r\n                { buildScoreElements(lowerElements) }\r\n                <BonusYahtzeeItem/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps  = (state: {diceRoll: IDiceState, scoreboard: IScoreboardState}): IProps => {\r\n    const {scoreboard, diceRoll} = state;\r\n    \r\n    const ones = scoreboard.ones;\r\n    const twos = scoreboard.twos;\r\n    const threes = scoreboard.threes;\r\n    const fours = scoreboard.fours;\r\n    const fives = scoreboard.fives;\r\n    const sixes = scoreboard.sixes;\r\n\r\n    const threeOfAKind = scoreboard.threeOfAKind;\r\n    const fourOfAKind = scoreboard.fourOfAKind;\r\n    const fullHouse = scoreboard.fullHouse;\r\n    const smallStraight = scoreboard.smallStraight;\r\n    const largeStraight = scoreboard.largeStraight;\r\n    const yahtzee = scoreboard.yahtzee;\r\n    const chance = scoreboard.chance;\r\n\r\n    const selectedScore = scoreboard.selectedScore;\r\n\r\n    const currentRoll = diceRoll.dice.map(die => die.value);\r\n\r\n    return { \r\n        ones, twos, threes, fours, fives, sixes, \r\n        threeOfAKind, fourOfAKind, fullHouse, smallStraight, largeStraight, yahtzee, chance,\r\n        selectedScore, currentRoll \r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {selectScore})(ScoreboardContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetDice, selectScore, playScore } from \"../redux/actions/actions\";\r\nimport { IDiceState } from \"../redux/reducers/diceRoll\";\r\nimport { IScoreboardState } from \"../redux/reducers/scoreboard\";\r\nimport DiceValues from \"../dice/DiceValues\";\r\nimport { ScoreTypes } from \"../scoreboard/ScoreTypes\";\r\n\r\ninterface IProps {\r\n    selectedScore?: ScoreTypes | null;\r\n    currentRoll?: Array<DiceValues|null|undefined>;\r\n    resetDice: () => void;\r\n    selectScore: (score: ScoreTypes | null) => void;\r\n    playScore: (scoreType: ScoreTypes, dice: Array<DiceValues>) => void;\r\n}\r\n\r\ninterface ActionFunc {\r\n    (dice: Array<DiceValues>): void\r\n}\r\n\r\nconst PlayScoreButton: React.FC<IProps> = (props: IProps) => {\r\n    const handleClick = () => {\r\n        if (!props.selectedScore) {\r\n            return;\r\n        }\r\n        console.log(\"playing score...\");\r\n        \r\n        props.playScore(props.selectedScore, props.currentRoll as Array<DiceValues>);\r\n        props.selectScore(null);\r\n        props.resetDice();        \r\n    };\r\n    \r\n    const enabled = \r\n        props.selectedScore !== undefined && \r\n        props.selectedScore !== null && \r\n        props.currentRoll !== undefined &&\r\n        props.currentRoll != null &&\r\n        props.currentRoll[0] !== undefined && \r\n        props.currentRoll[0] !== null;\r\n\r\n    return (\r\n        <button \r\n            type=\"button\" \r\n            className=\"btn btn-primary\"\r\n            style={{marginLeft: \"10px\"}} \r\n            disabled={!enabled}\r\n            onClick={handleClick}\r\n        >\r\n            Play\r\n        </button>\r\n    );\r\n} \r\n\r\nconst mapStateToProps = (state: {diceRoll: IDiceState, scoreboard: IScoreboardState}) => {\r\n    const {diceRoll, scoreboard} = state;\r\n    const selectedScore = scoreboard.selectedScore;\r\n    const currentRoll = diceRoll.dice.map(die => die.value);\r\n\r\n    return { selectedScore, currentRoll };\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectScore, resetDice, playScore })(PlayScoreButton);","import React, { CSSProperties } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { IScoreboardState } from \"../redux/reducers/scoreboard\";\r\n\r\ninterface IProps {\r\n    lowerTotal: number;\r\n    upperTotal: number;\r\n    total: number;\r\n}\r\n\r\nconst Totals: React.FC<IProps> = (props: IProps) => {\r\n    const style: CSSProperties = {\r\n        margin: \"10px\", padding: \"5px\"\r\n    };\r\n\r\n    return (<div className=\"row\">\r\n        <div>\r\n            <div style={style}>Upper Total: {props.upperTotal}</div>\r\n            <div style={style}>Lower Total: {props.lowerTotal}</div>\r\n            <div style={style}>Total: {props.total}</div>\r\n        </div>\r\n    </div>);\r\n};\r\n\r\nconst mapStateToProps  = (state: {scoreboard: IScoreboardState}): IProps => {\r\n    const {scoreboard} = state;\r\n    const lowerTotal = scoreboard.lowerTotal;\r\n    const upperTotal = scoreboard.upperTotal;\r\n    const total = scoreboard.total;\r\n\r\n    return { lowerTotal, upperTotal, total };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Totals);","import React from 'react';\nimport './App.css';\nimport DiceContainer from './components/DiceContainer';\nimport RollDiceButton from './components/RollDiceButton';\nimport ScoreboardContainer from './components/ScoreboardContainer';\nimport PlayScoreButton from './components/PlayScoreButton';\nimport Totals from './components/Totals';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"container\">\n      <DiceContainer/>\n      <RollDiceButton/>\n      <PlayScoreButton/>\n      <ScoreboardContainer/>\n      <Totals/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ROLL_DICE, TOGGLE_DICE, RESET_DICE } from \"../actions/actionTypes\";\r\nimport DiceValues from \"../../dice/DiceValues\";\r\n\r\nexport interface IDiceState {\r\n    dice: Array< { value?: DiceValues, locked: boolean }>,\r\n    rollsRemaining: number;\r\n}\r\n\r\nconst initialState: IDiceState = {\r\n    dice: [\r\n        { value: null, locked: false},\r\n        { value: null, locked: false},\r\n        { value: null, locked: false},\r\n        { value: null, locked: false},\r\n        { value: null, locked: false}\r\n    ],\r\n    rollsRemaining: 3\r\n}\r\n\r\nconst rollD6 = (): DiceValues => {\r\n    let value =  Math.floor(Math.random() * 6) + 1;\r\n    return value as DiceValues;\r\n}\r\n\r\nexport default function(state: IDiceState = initialState, action: {type?: string, payload?: any}) {\r\n    switch (action.type)  {\r\n        case ROLL_DICE: \r\n            if (state.rollsRemaining === 0) {\r\n                return state;\r\n            }\r\n            const newDice = state.dice.map((die) => {\r\n                if(die.locked) return die;\r\n                return { \r\n                    value: rollD6(),\r\n                    locked: false\r\n                };\r\n            });\r\n            return {\r\n                dice: newDice,\r\n                rollsRemaining: state.rollsRemaining - 1\r\n            };\r\n        case TOGGLE_DICE:\r\n            const newState = { ...state };\r\n            newState.dice[action.payload.index - 1].locked = !newState.dice[action.payload.index - 1].locked;\r\n            return newState;\r\n        case RESET_DICE: \r\n            return { ...initialState };\r\n        default:\r\n            return { ...state };\r\n    }\r\n}","import { SELECT_SCORE, PLAY_SCORE } from \"../actions/actionTypes\";\r\nimport Scoring from \"../../scoreboard/Scoring\";\r\nimport { ScoreTypes } from \"../../scoreboard/ScoreTypes\";\r\n\r\nexport interface IScoreboardState {\r\n    ones: number | null;\r\n    twos: number | null;\r\n    threes: number | null;\r\n    fours: number | null;\r\n    fives: number | null;\r\n    sixes: number | null;\r\n    bonus: number | null;\r\n    \r\n    threeOfAKind: number | null;\r\n    fourOfAKind: number | null;\r\n    fullHouse: number | null;\r\n    smallStraight: number | null;\r\n    largeStraight: number | null;\r\n    yahtzee: number | null;\r\n    bonusYahtzees: Array<number> | null;\r\n    chance: number | null;\r\n\r\n    lowerTotal: number;\r\n    upperTotal: number;\r\n    total: number;\r\n\r\n    selectedScore: ScoreTypes | null;\r\n}\r\n\r\nconst initialState: IScoreboardState = {\r\n    ones: null,\r\n    twos: null,\r\n    threes: null,\r\n    fours: null,\r\n    fives: null,\r\n    sixes: null,\r\n    bonus: null,\r\n    \r\n    threeOfAKind: null,\r\n    fourOfAKind: null,\r\n    fullHouse: null,\r\n    smallStraight: null,\r\n    largeStraight: null,\r\n    yahtzee: null,\r\n    bonusYahtzees: null,\r\n    chance: null,\r\n\r\n    lowerTotal: 0,\r\n    upperTotal: 0,\r\n    total: 0,\r\n\r\n    selectedScore: null\r\n}\r\n\r\nexport default function(state: IScoreboardState = initialState, action: {type?: string, payload?: any}) {\r\n    const totalLower = (newState: IScoreboardState): number => {\r\n        let upperScore: number = \r\n            (newState.threeOfAKind || 0) + \r\n            (newState.fourOfAKind || 0) + \r\n            (newState.fullHouse || 0) + \r\n            (newState.smallStraight || 0) + \r\n            (newState.largeStraight || 0) + \r\n            (newState.yahtzee || 0) + \r\n            (newState.chance || 0);\r\n        \r\n        if (newState.bonusYahtzees !== null) {\r\n            newState.bonusYahtzees.forEach(bonus => upperScore += bonus);\r\n        }\r\n\r\n        return upperScore;\r\n    }\r\n    const totalUpper = (newState: IScoreboardState): number => {\r\n        const lowerScore: number = \r\n            (newState.ones || 0) +\r\n            (newState.twos || 0) + \r\n            (newState.threes || 0) +\r\n            (newState.fours || 0) + \r\n            (newState.fives || 0) + \r\n            (newState.sixes || 0);\r\n        \r\n        return lowerScore;\r\n    }\r\n\r\n    const calculateTotals = (newState: IScoreboardState): IScoreboardState => {\r\n        newState.lowerTotal = totalLower(newState);\r\n        newState.upperTotal = totalUpper(newState);\r\n        newState.total = newState.lowerTotal + (newState.bonus || 0) + newState.upperTotal;\r\n\r\n        return newState;\r\n    }\r\n\r\n    const checkUpperBonus = (newState: IScoreboardState) => {\r\n        if (state.bonus !== null) {\r\n            return;\r\n        }\r\n        \r\n        const lowerScore: number = \r\n            (newState.ones || 0) +\r\n            (newState.twos || 0) + \r\n            (newState.threes || 0) +\r\n            (newState.fours || 0) + \r\n            (newState.fives || 0) + \r\n            (newState.sixes || 0);\r\n\r\n        if (lowerScore >= 63) {\r\n            newState.bonus = 35;\r\n        }\r\n    }\r\n\r\n    const checkBonusYahtzee = (newState: IScoreboardState) => {\r\n        if (state.yahtzee === null || Scoring.yahtzee(action.payload.dice) === 0) {\r\n            return;\r\n        }\r\n    \r\n        if (newState.bonusYahtzees === null) { \r\n            newState.bonusYahtzees = [];\r\n        }\r\n        newState.bonusYahtzees.push(100);\r\n    };\r\n\r\n    const calculateOnes = () => {\r\n        if (state.ones !== null) {\r\n            return state;\r\n        }\r\n        let newScoreboard = {...state};\r\n        newScoreboard.ones = Scoring.ones(action.payload.dice);\r\n\r\n        checkUpperBonus(newScoreboard);\r\n        checkBonusYahtzee(newScoreboard);\r\n        \r\n        return calculateTotals(newScoreboard);\r\n    }\r\n\r\n    const calculateTwos = () => {\r\n        if (state.twos !== null) {\r\n            return state;\r\n        }\r\n        let newScoreboard = {...state};\r\n        newScoreboard.twos = Scoring.twos(action.payload.dice);\r\n\r\n        checkUpperBonus(newScoreboard);\r\n        checkBonusYahtzee(newScoreboard);\r\n        \r\n        return calculateTotals(newScoreboard);\r\n    }\r\n\r\n    const calculateThrees = () => {\r\n        if (state.threes !== null) {\r\n            return state;\r\n        }\r\n        let newScoreboard = {...state};\r\n        newScoreboard.threes = Scoring.threes(action.payload.dice);\r\n\r\n        checkUpperBonus(newScoreboard);\r\n        checkBonusYahtzee(newScoreboard);\r\n        \r\n        return calculateTotals(newScoreboard);\r\n    }\r\n\r\n    const calculateFours = () => {\r\n        if (state.fours !== null) {\r\n            return state;\r\n        }\r\n        let newScoreboard = {...state};\r\n        newScoreboard.fours = Scoring.fours(action.payload.dice);\r\n\r\n        checkUpperBonus(newScoreboard);\r\n        checkBonusYahtzee(newScoreboard);\r\n        \r\n        return calculateTotals(newScoreboard);\r\n    }\r\n\r\n    const calculateFives = () => {\r\n        if (state.fives !== null) {\r\n            return state;\r\n        }\r\n        let newScoreboard = {...state};\r\n        newScoreboard.fives = Scoring.fives(action.payload.dice);\r\n\r\n        checkUpperBonus(newScoreboard);\r\n        checkBonusYahtzee(newScoreboard);\r\n        \r\n        return calculateTotals(newScoreboard);\r\n    }\r\n\r\n    const calculateSixes = () => {\r\n        if (state.sixes !== null) {\r\n            return state;\r\n        }\r\n        let newScoreboard = {...state};\r\n        newScoreboard.sixes = Scoring.sixes(action.payload.dice);\r\n\r\n        checkUpperBonus(newScoreboard);\r\n        checkBonusYahtzee(newScoreboard);\r\n        \r\n        return calculateTotals(newScoreboard);\r\n    }\r\n\r\n    const calculateThreeOfAKind = () => {\r\n        if (state.threeOfAKind !== null) {\r\n            return state;\r\n        }\r\n\r\n        let newScoreboard = {...state};\r\n        newScoreboard.threeOfAKind = Scoring.threeOfAKind(action.payload.dice);\r\n\r\n        checkBonusYahtzee(newScoreboard);\r\n        \r\n        return calculateTotals(newScoreboard);\r\n    }\r\n\r\n    const calculateFourOfAKind = () => {\r\n        if (state.fourOfAKind !== null) {\r\n            return state;\r\n        }\r\n\r\n        let newScoreboard = {...state};\r\n        newScoreboard.fourOfAKind = Scoring.fourOfAKind(action.payload.dice);\r\n\r\n        checkBonusYahtzee(newScoreboard);\r\n        \r\n        return calculateTotals(newScoreboard);\r\n    }\r\n\r\n    const calculateFullHouse = () => {\r\n        if (state.fullHouse !== null) {\r\n            return state;\r\n        }\r\n\r\n        let newScoreboard = {...state};\r\n        newScoreboard.fullHouse = Scoring.fullHouse(action.payload.dice);\r\n\r\n        checkBonusYahtzee(newScoreboard);\r\n        \r\n        return calculateTotals(newScoreboard);\r\n    }\r\n\r\n    const calculateSmallStraight = () => {\r\n        if (state.smallStraight !== null) {\r\n            return state;\r\n        }\r\n\r\n        let newScoreboard = {...state};\r\n        newScoreboard.smallStraight = Scoring.smallStraight(action.payload.dice);\r\n\r\n        checkBonusYahtzee(newScoreboard);\r\n        \r\n        return calculateTotals(newScoreboard);\r\n    }\r\n\r\n    const calculateLargeStraight = () => {\r\n        if (state.smallStraight !== null) {\r\n            return state;\r\n        }\r\n\r\n        let newScoreboard = {...state};\r\n        newScoreboard.largeStraight = Scoring.largeStraight(action.payload.dice);\r\n\r\n        checkBonusYahtzee(newScoreboard);\r\n        \r\n        return calculateTotals(newScoreboard);\r\n    }\r\n\r\n    \r\n    const calculateYahtzee = () => {\r\n        if (state.yahtzee !== null) {\r\n            return state;\r\n        }\r\n\r\n        let newScoreboard = {...state};\r\n        newScoreboard.yahtzee = Scoring.yahtzee(action.payload.dice);\r\n\r\n        checkBonusYahtzee(newScoreboard);\r\n        \r\n        return calculateTotals(newScoreboard);\r\n    }\r\n\r\n    \r\n    const calculateChance = () => {\r\n        if (state.chance !== null) {\r\n            return state;\r\n        }\r\n\r\n        let newScoreboard = {...state};\r\n        newScoreboard.chance = Scoring.chance(action.payload.dice);\r\n\r\n        checkBonusYahtzee(newScoreboard);\r\n        \r\n        return calculateTotals(newScoreboard);\r\n    }\r\n\r\n    switch (action.type) {\r\n        case PLAY_SCORE: \r\n            switch (action.payload.scoreType as ScoreTypes) {\r\n                case \"ones\": \r\n                    return calculateOnes();\r\n                case \"twos\": \r\n                    return calculateTwos();\r\n                case \"threes\":\r\n                    return calculateThrees();\r\n                case \"fours\":\r\n                    return calculateFours();\r\n                case \"fives\":\r\n                    return calculateFives();\r\n                case \"sixes\":\r\n                    return calculateSixes();\r\n                case \"threeOfAKind\": \r\n                    return calculateThreeOfAKind();\r\n                case \"fourOfAKind\":\r\n                    return calculateFourOfAKind();\r\n                case \"fullHouse\": \r\n                    return calculateFullHouse();\r\n                case \"smallStraight\":\r\n                    return calculateSmallStraight();\r\n                case \"largeStraight\":\r\n                    return calculateLargeStraight();\r\n                case \"yahtzee\":\r\n                    return calculateYahtzee();\r\n                case \"chance\":\r\n                    return calculateChance();\r\n            }\r\n            break;\r\n\r\n        case SELECT_SCORE:\r\n            var newState = { ...state };\r\n            newState.selectedScore = action.payload.score;\r\n            return newState;\r\n\r\n        default:\r\n            return { ...state};\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport diceRoll from \"./diceRoll\";\r\nimport scoreboard from \"./scoreboard\";\r\n\r\nexport default combineReducers({diceRoll, scoreboard});","import {createStore} from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer);\r\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}